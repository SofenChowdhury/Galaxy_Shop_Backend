import { encode, decode } from 'qss';
import isUndefined from 'lodash/isUndefined';

var encodeQueryString = function encodeQueryString(params, prefix) {
  return encode(params, prefix);
};
var decodeQueryString = function decodeQueryString(query) {
  return decode(query);
};
var decodeLocationSearch = function decodeLocationSearch(search) {
  var s = isUndefined(search) ? window.location.search : search;
  return s ? decodeQueryString(s.substr(1)) : {};
};
var MAX_UID = 1000000;
var uid = function uid(prefix) {
  do {
    prefix += ~~(Math.random() * MAX_UID);
  } while (typeof document !== 'undefined' && document.getElementById(prefix));

  return prefix;
};
var uuid = function uuid() {
  var d = new Date().getTime();
  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c === 'x' ? r : r & 0x7 | 0x8).toString(16);
  });
  return uuid;
};
var hashCode = function hashCode(s) {
  var str = String(s);
  var hash = 0;
  var char;
  if (str.trim().length === 0) return hash;

  for (var i = 0; i < str.length; i++) {
    char = str.charCodeAt(i);
    hash = (hash << 5) - hash + char;
    hash &= hash;
  }

  return Math.abs(hash);
};
var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';
var IS_IOS = IS_BROWSER && /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
var sleep = function sleep(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
};

export { IS_BROWSER, IS_IOS, decodeLocationSearch, decodeQueryString, encodeQueryString, hashCode, sleep, uid, uuid };
